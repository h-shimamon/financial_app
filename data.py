# data.py
import pandas as pd
from constants import ALL_REQUIRED_COLUMNS

def load_input(uploaded_file) -> pd.DataFrame:
    if not uploaded_file:
        raise ValueError("アップロードがありません")
    name = uploaded_file.name.lower()
    if name.endswith(".xlsx"):
        return pd.read_excel(uploaded_file)
    if name.endswith(".csv"):
        return pd.read_csv(uploaded_file)
    raise ValueError(f"対応していない形式: {uploaded_file.name}")


def generate_template() -> pd.DataFrame:
    """フルスペックのダミーデータを戻す"""
    return pd.DataFrame({
        "年度": ["H22", "H23", "H24", "H25", "H26"],

        # BS：流動資産
        "現金・預金":               [300, 350, 370, 360, 400],
        "受取手形・売掛金":         [500, 520, 510, 530, 525],
        "有価証券":               [50,  50,  50,  50,  50 ],
        "棚卸資産":               [200, 210, 190, 195, 205],
        "その他の流動資産":         [30,  30,  30,  30,  30 ],

        # BS：固定資産
        "建物・構築物・建物附属設備": [1000]*5,
        "機械装置":               [500]*5,
        "船舶、車両運搬具、工具・器具・備品": [300]*5,
        "リース資産":             [100]*5,
        "土地":                   [800]*5,
        "建設仮勘定":             [100]*5,
        "その他の有形固定資産":     [200]*5,
        "無形固定資産":           [150]*5,
        "投資その他の資産":         [100]*5,
        "減価償却累計額":           [500]*5,

        # BS：流動負債
        "支払手形・買掛金":         [300, 310, 320, 315, 330],
        "短期借入金（金融機関）":   [100, 120, 130, 120, 125],
        "短期借入金（金融機関以外）":[50,  60,  55,  58,  62 ],
        "リース債務":             [20]*5,
        "その他の流動負債":         [40]*5,

        # BS：固定負債
        "社債":                   [0, 50, 50, 60, 70],
        "長期借入金（金融機関）":   [200, 210, 220, 215, 230],
        "長期借入金（金融機関以外）":[80,  85,  90,  92,  95 ],
        "リース債務_固定":         [30]*5,
        "その他の固定負債":         [50]*5,

        # BS：純資産
        "資本金":                 [1000]*5,
        "資本剰余金":             [300]*5,
        "利益剰余金":             [200]*5,
        "自己株式":               [50]*5,
        "その他の純資産":         [100]*5,

        # PL：売上高・費用
        "売上高":                 [1000, 1200, 1300, 1250, 1400],
        # 売上原価（変動費）
        "商品仕入原価":           [400, 480, 520, 500, 560],
        "材料費":                 [50]*5,
        "労務費":                 [80]*5,
        "外注費":                 [60]*5,
        "減価償却費":             [30, 35, 40, 38, 42],
        "その他の売上原価":         [20]*5,
        # 販管費（固定費）
        "人件費":                 [120,130,140,135,145],
        "地代家賃":               [40]*5,
        "水道光熱費":             [20]*5,
        "運賃荷造費":             [15]*5,
        "販売手数料":             [30]*5,
        "広告宣伝費":             [25]*5,
        "交際費":                 [10]*5,
        "減価償却費_販管":         [20,22,23,21,24],
        "従業員教育費":           [5]*5,
        "租税公課":               [8]*5,
        "その他の経費":           [12]*5,

        # その他
        "従業員数":               [50, 55, 60, 58, 62],
        "加工高":                 [200,220,230,215,240],
        "付加価値":               [400,450,480,460,500],
    })

def load_input(uploaded_file) -> pd.DataFrame:
    """Streamlit の file_uploader から渡されたファイルを読み込む"""
    if uploaded_file.name.endswith(".xlsx"):
        return pd.read_excel(uploaded_file)
    else:
        return pd.read_csv(uploaded_file)

